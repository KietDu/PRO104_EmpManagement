package com.ui;

import com.helper.ShareHelper;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Painter;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.UIManager;

public final class ChaoJDialog extends javax.swing.JDialog {

    public static class MyPainter implements Painter {

        @Override
        public void paint(Graphics2D g, Object object, int width, int height) {
            if (object instanceof javax.swing.JProgressBar) {
                Color blueColor = new Color(84, 118, 255);
                Color blueColorWithAlpha = new Color(84, 118, 255, 127);
                GradientPaint GRADIENT_1 = new GradientPaint(0, 0, blueColorWithAlpha, 0, height / 2, blueColor);
                g.setPaint(GRADIENT_1);
                g.fillRect(0, 0, width, height / 2);
                GradientPaint GRADIENT_2 = new GradientPaint(0, height / 2, blueColor, 0, height, blueColorWithAlpha);
                g.setPaint(GRADIENT_2);
                g.fillRect(0, height / 2, width, height);
            }
        }
    }

    public ChaoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        UIManager.put("ProgressBar[Enabled+Finished].foregroundPainter", new MyPainter());
        UIManager.put("ProgressBar[Enabled+Indeterminate].foregroundPainter", new MyPainter());
        UIManager.put("ProgressBar[Enabled].foregroundPainter", new MyPainter());
        SwingUtilities.updateComponentTreeUI(this);

        this.init();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    void init() {
        setLocationRelativeTo(null);
        new Timer(20, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int value = progressBar.getValue();
                if (value < 100) {
                    progressBar.setValue(value + 1);
                } else {
                    ChaoJDialog.this.dispose();
                }
            }
        }).start();

        setIconImage(ShareHelper.APP_ICON);
        setLocationRelativeTo(null);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLogo = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("WELCOME!");

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/polypro/icon/logo.png"))); // NOI18N
        getContentPane().add(lblLogo, java.awt.BorderLayout.CENTER);

        progressBar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        progressBar.setForeground(new java.awt.Color(153, 0, 0));
        progressBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        progressBar.setStringPainted(true);
        getContentPane().add(progressBar, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChaoJDialog dialog = new ChaoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblLogo;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables

}
